---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-local-etc-claim
  namespace: pihole
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-local-dnsmasq-claim
  namespace: pihole
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
    spec:
      volumes:
      - name: pihole-local-etc-volume
        persistentVolumeClaim:
          claimName: pihole-local-etc-claim
      - name: pihole-local-dnsmasq-volume
        persistentVolumeClaim:
          claimName: pihole-local-dnsmasq-claim
      initContainers:
      # Clearing the password in config, causes Pi-Hole to reset password from Env at start
      - name: clear-password
        image: busybox:1.28
        command:
        - sh
        - "-c"
        - if [ -e /etc/pihole/setupVars.conf ]; then sed -i "/WEBPASSWORD/d" "/etc/pihole/setupVars.conf" && echo Pihole password cleared from /etc/pihole/setupVars.conf; fi
        volumeMounts:
        - name: pihole-local-etc-volume
          mountPath: "/etc/pihole"
      containers:
      - name: pihole
        image: pihole/pihole:latest
        ports:
        - name: web
          containerPort: 80
        - name: dns
          containerPort: 53
        volumeMounts:
        - name: pihole-local-etc-volume
          mountPath: "/etc/pihole"
        - name: pihole-local-dnsmasq-volume
          mountPath: "/etc/dnsmasq.d"
        env:
        # Kubernetes accepts env variables only as strings - https://github.com/kubernetes/dashboard/issues/1603#issuecomment-311306926
        - name: ServerIP
          value: 192.168.0.4
        - name: VIRTUAL_HOST
          value: 192.168.0.4
          # value: "192.168.0.4:8000"
        - name: DNS1
          value: 91.239.100.100
        - name: DNS2
          value: 89.233.43.71
        - name: TZ
          value: "Europe/Copenhagen"
        - name: DNS_FQDN_REQUIRED
          value: "false"
        # - name: WEB_PORT
        #   value: "80"
        - name: WEBPASSWORD
          valueFrom:
            secretKeyRef:
              name: pihole
              key: WEBPASSWORD

---
apiVersion: v1
kind: Service
metadata:
  name: pihole
  namespace: pihole
spec:
  type: NodePort
  selector:
    app: pihole
  ports:
  - name: web
    port: 8000
    targetPort: web
  - name: dns-tcp
    protocol: TCP
    port: 53
    targetPort: dns
  - name: dns-udp
    protocol: UDP
    port: 53
    targetPort: dns
  # Attempt to preserve source IP - https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  # Does not seem to work, possibly because accessing via service port, not nodeport
  externalTrafficPolicy: Local
  externalIPs:
  - 192.168.0.4
